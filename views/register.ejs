<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        form {
            max-width: 400px;
            margin: 0 auto;
        }
        label {
            display: block;
            margin-bottom: 8px;
        }
        input {
            width: 100%;
            padding: 8px;
            margin-bottom: 16px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            background-color: #4caf50;
            color: white;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>

    <form action="/register_user" method="post">
        <label for="firstname">First Name:</label>
        <input type="text" name="firstname">

        <label for="lastname">Last Name:</label>
        <input type="text" name="lastname">

        <label for="email">Email:</label>
        <input type="email" name="email">

        <label for="password">Password:</label>
        <input type="password" name="password">

        <label for="cpassword">Confirm Password:</label>
        <input type="password" name="cpassword">

        <input type="submit" value="Submit">
    </form>
    <script>
        function registerUser(event) {
            event.preventDefault(); // Prevent the default form submission behavior

            const form = document.getElementById("registrationForm");
            const formData = new FormData(form);

            fetch("https://blog-apis-one.vercel.app/register_user", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(Object.fromEntries(formData)),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log(data); // Log the response from the server
                // You can handle the response here (e.g., show a success message)
            })
            .catch(error => {
                console.error("Error:", error);
                // Handle the error (e.g., show an error message to the user)
            });
        }
    </script>
</body>
</html>
